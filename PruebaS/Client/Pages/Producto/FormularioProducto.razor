@inject NavigationManager nm
@inject CategoriaRepositorio repositorio
@inject ProveedorRepositorio rp

<EditForm Model="producto" OnValidSubmit="OnValidSubmit">

    <DataAnnotationsValidator />
    <div>
        <div class="form-group mx-sm-3 mb-2">
            <label>Nombre del producto: </label>
            <div>
                <InputText class="form-control" @bind-Value="@producto.Descripcion"></InputText>
                <ValidationMessage For="@(() => producto.Descripcion)" />
            </div>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            <label>Marca: </label>
            <div>
                <InputText class="form-control" @bind-Value="@producto.Marca"></InputText>
                <ValidationMessage For="@(() => producto.Marca)" />
            </div>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            <label>Medida: </label>
            <div>
                <InputText class="form-control" @bind-Value="@producto.Medida"></InputText>
                <ValidationMessage For="@(() => producto.Medida)" />
            </div>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            <label>Cantidad: </label>
            <div>
                <InputNumber class="form-control" @bind-Value="@producto.Cantidad"></InputNumber>
                <ValidationMessage For="@(() => producto.Cantidad)" />
            </div>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            <label>Precio Unitario: </label>
            <div>
                <InputNumber class="form-control" @bind-Value="@producto.PrecioUnitario"></InputNumber>
                <ValidationMessage For="@(() => producto.PrecioUnitario)" />
            </div>
        </div>
        <div>
            <div class="form-group mx-sm-3 mb-2">
                <label>Categoria: </label>
                <InputSelect @bind-Value="@producto.CategoriaId" class="form-control">
                    <option value="0" disabled>--Seleccione una Opción--</option>
                    @foreach (var item in categorias)
                    {
                        <option value="@item.Id">@item.Nombre</option>}
                    }
                </InputSelect>
                <ValidationMessage For="@(() => producto.CategoriaId)" />
            </div>
        </div>
        <div>
        <div class="form-group mx-sm-3 mb-2">
            <label>Proveedor: </label>
            <InputSelect @bind-Value="@producto.ProveedorId" class="form-control">
                <option value="0" disabled>--Seleccione una Opción--</option>
                @foreach (var item in proveedores)
                {
                    <option value="@item.Id">@item.Nombre</option>}
                }
            </InputSelect>
            <ValidationMessage For="@(() => producto.ProveedorId)" />
        </div>
    </div>
    </div>
    <div>
        <div>
            <div class="form-group mx-sm-3 mb-2">
                <button class="btn btn-success" type="submit">Guardar</button>
                <button class="btn btn-danger" type="button" @onclick="Cancelar">Regresar</button>
            </div>
        </div>
        <div>

        </div>
    </div>
</EditForm>

@code {

    [Parameter] public Producto producto { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private List<Categoria> categorias = new List<Categoria>();
    private List<Proveedor> proveedores = new List<Proveedor>();

    protected override async Task OnInitializedAsync()
    {
        await ObtenerCategorias();
        await ObtenerProveedores();
    }

    private void Cancelar()
    {
        nm.NavigateTo("producto/listar");
    }
    private async Task ObtenerCategorias()
    {
        var httpResponse = await repositorio.GetCategoria<List<Categoria>>("api/categoria");
        categorias = httpResponse.Response;
    }
    private async Task ObtenerProveedores()
    {
        var httpResponse = await rp.GetProveedor<List<Proveedor>>("api/proveedor");
        proveedores = httpResponse.Response;
    }
}
